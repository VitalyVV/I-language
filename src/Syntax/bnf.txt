+Program : SimpleDeclaration
        | RoutineDeclaration

+SimpleDeclaration : VariableDeclaration
                  | TypeDeclaration

+VariableDeclaration : "var" Identifier "col" Type ("is" Expression)
                    | "var" Identifier "is" Expression

+TypeDeclaration : "type" Identifier "is" Type

+Type : PrimitiveType
     | UserType
     | Identifier

+PrimitiveType : "int"
              | "real"
              | "bool"

+UserType : ArrayType
         | RecordType

+RecordType : "record" {VariableDeclaration} "end"

+ArrayType : "array" "lsbr" Expression "rsbr" Type

+Statement : Assignment
          | RoutineCall
          | WhileLoop
          | ForLoop
          | IfStatement

+Assignment : ModifiablePrimary "ass" Expression

+RoutineCall : Identifier [ "lbr" Expression {"comm" Expression} "rbr" ]

+WhileLoop : "while" Expression "loop" Body "end"

+ForLoop : "for" Identifier "in" ["reverse"] Range "loop" Body "end"

+Range : Expression ".." Expression

+IfStatement : "if" Expression "then" Body ["else" Body] "end"

+RoutineDeclaration : "routine" Identifier [ Parameters ] [ "col" Type ] [ "is" Body "end" ]

+Parameters : "lbr" ParameterDeclaration { "comm" ParameterDeclaration } "rbr"

+ParameterDeclaration : Identifier "col" Type

+Body : { (SimpeDeclaration | Statement) }

+Expression : Relation { ("and" | "or" | "xor") } Relation
Relation : Simple [ ( "less" | "lesseq" | "great" | "greateq" | "eq" | "noteq" ) Simple ]
Factor : Simple { ( "add" | "sub" ) Simple}
Simple : Summand { ( mul | "div" | "perc" ) Summand }
Summand : Primary | "lbr" Expression "rbr"
Primary : [ Sign | "not" ] IntegerLiteral
        | [ Sign ] RealLiteral
        | "true"
        | "false"
        | ModifiablePrimary
        | RoutineCall
Sign : "add" | "sub"

ModifiablePrimary: Identifier { "dot" Identifier | "lsbr" Expression "rsbr" }

IntegerLiteral
RealLiteral